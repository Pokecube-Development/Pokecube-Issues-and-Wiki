plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'org.ajoberstar.grgit' version '2.3.0'
    id 'net.neoforged.gradle' version '[6.0.18,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
}

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url "https://maven.neoforged.net/releases" }
    maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    mavenCentral()
    jcenter()
    flatDir {
        dir 'libs'
    }
}

mixin { add sourceSets.main, "pokecube.refmap.json" }

ext {
    VERSION_COMPILE = gitVersion("${version_major}.${version_minor}")
    VERSION_THUTCORE = gitVersion("${version_thutcore}.${version_major}.${version_minor}")
    // Force a refresh of the toml file
    cleanTOML()
}

version = "${version_minecraft}-${VERSION_COMPILE}"
group = 'thut'
archivesBaseName = "${compile_name}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: "${channel_mappings}", version: "${version_mappings}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client = {
            taskName 'run_client_1'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'debug'
            properties '-XX': '+UnlockCommercialFeatures'
            properties '-XX': '+FlightRecorder'
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            arg "-mixin.config=pokecube.mixins.json"
            source sourceSets.main
        }
        client_2 {
            parent runs.client
            taskName 'run_client_2'

            environment 'MOD_CLASSES', 'dummy' // Needed to work around FG limitation, FG will replace this!
            args '-mixin.config=pokecube.mixins.json', '--username', 'Dev2'
        }
        client_3 {
            parent runs.client
            taskName 'run_client_3'

            environment 'MOD_CLASSES', 'dummy' // Needed to work around FG limitation, FG will replace this!
            args '-mixin.config=pokecube.mixins.json', '--username', 'Dev3'
        }
        client_4 {
            parent runs.client
            taskName 'run_client_4'

            environment 'MOD_CLASSES', 'dummy' // Needed to work around FG limitation, FG will replace this!
            args '-mixin.config=pokecube.mixins.json', '--username', 'Dev4'
        }
        test_client {
            parent runs.client
            taskName 'run_test_client'

            environment 'MOD_CLASSES', 'dummy' // Needed to work around FG limitation, FG will replace this!
            arg "-mixin.config=pokecube.mixins.json"

            mods {
                TestMods { sources sourceSets.test }
                MainMods { sources sourceSets.main }
            }
        }
        server = {
            taskName 'run_server'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'debug'
            properties '-XX': '+UnlockCommercialFeatures'
            properties '-XX': '+FlightRecorder'
            jvmArg "-Xmx2G"
            workingDirectory project.file('run').canonicalPath
            arg "-mixin.config=pokecube.mixins.json"
            source sourceSets.main
        }
        test_server {
            parent runs.server
            taskName 'run_test_server'

            environment 'MOD_CLASSES', 'dummy' // Needed to work around FG limitation, FG will replace this!
            arg "-mixin.config=pokecube.mixins.json"

            mods {
                TestMods { sources sourceSets.test }
                MainMods { sources sourceSets.main }
            }
        }
    }
}

dependencies {
    minecraft "net.neoforged:forge:${version_minecraft}-${version_neoforged}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    
    // JEI
    implementation fg.deobf("curse.maven:jei-${version_jei}")
}

sourceSets {
    main.resources.srcDirs += 'src/generated/resources'
}

processResources.doLast {
    def TOMLFILE = "./build/resources/main/META-INF/mods.toml"
    replaceParameters(TOMLFILE, "version_thutcore", VERSION_THUTCORE)
    replaceParameters(TOMLFILE, "version_mc", "${version_mcsupport}")
    replaceParameters(TOMLFILE, "version_forge", "${version_neoforged}")
}

def replaceParameters(filename, find, replace) {
    ant.replace(file:filename,token:find,value:replace)
}

// Example for how to get properties into the manifest for reading at runtime.
tasks.named('jar', Jar).configure {
    manifest {
        attributes([
	        'FMLAT': 'accesstransformer.cfg',
	        "Specification-Title": "${compile_name}",
	        "Specification-Vendor": "${author_name}",
	        "Specification-Version": VERSION_COMPILE,
	        "Implementation-Title": project.name,
	        "Implementation-Version": VERSION_COMPILE,
	        "Implementation-Vendor" :"${author_name}",
	        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
	        "MixinConfigs": "pokecube.mixins.json"
        ])
    }

    // This is the preferred method to reobfuscate your jar file
    finalizedBy 'reobfJar'
}

def cleanTOML()
{
    delete "./build/resources/main/META-INF/mods.toml" 
}

def gitVersion(value) {
    if("${pre_release}".toBoolean())
    {
        return "${value}.${pre_ver}"
    }
    def raw = grgit.describe(longDescr: true)
    def desc = (raw == null ? 'unknown-offset-hash' : grgit.describe(longDescr: true)).split('-') as List
    def vers = desc.get(1)
    def splis = vers.split(/[.]/)
    def majver = splis[0].toInteger()
    def subver = splis[1].toInteger()
    def offset = splis[2].toInteger()
    def ver = offset + 1
    if (subver < version_minor.toInteger() || majver < version_major.toInteger()){
        ver = 0
    }
    return "${value}.${ver}"
}